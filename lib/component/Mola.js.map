{"version":3,"sources":["component/Mola.js"],"names":["Mola","resolveTreeNode","type","renderTreeNode","props","children","key","level","createElement","traverse","root","index","filter","length","map","child","render","components","propTypes","shape","id","oneOfType","number","string","isRequired","arrayOf","object"],"mappings":";;;;;;;;;;;;;;;;;;;QAQqBA,I;;;;;;;;uBAEjBC,e,4BAAgBC,I,EAAM;AAClB,mBAAO,2BAAaA,IAAb,CAAP;AACH,S;;uBAEDC,c,2BAAeD,I,EAAME,K,EAAOC,Q,EAAUC,G,EAAgB;AAAA,gBAAXC,KAAW,uEAAH,CAAG;;;AAElD,mBAAO,mBAAMC,aAAN,CACHN,IADG,8BAGIE,KAHJ;AAICE,qBAAQC,KAAR,SAAiBD,GAJlB;AAKCD;AALD,eAAP;AASH,S;;uBAEDI,Q,qBAASC,I,EAAMC,K,EAAOJ,K,EAAOK,M,EAAQ;AAAA;;AAAA,gBAG7BV,IAH6B,GAM7BQ,IAN6B,CAG7BR,IAH6B;AAAA,gBAI7BG,QAJ6B,GAM7BK,IAN6B,CAI7BL,QAJ6B;AAAA,gBAK1BD,KAL0B,wCAM7BM,IAN6B;;;AAQjC,gBAAIE,UAAU,CAACA,OAAOF,IAAP,EAAaC,KAAb,EAAoBJ,KAApB,CAAf,EAA2C;AACvC,uBAAO,IAAP;AACH;;AAEDF,uBAAWA,YAAYA,SAASQ,MAArB,GACLR,SACGS,GADH,CAEM,UAACC,KAAD,EAAQJ,KAAR;AAAA,uBAAkB,OAAKF,QAAL,CACdM,KADc,EAEdJ,KAFc,EAGdJ,QAAQ,CAHM,EAIdK,MAJc,CAAlB;AAAA,aAFN,CADK,GAUL,IAVN;;AAYA,mBAAO,KAAKT,cAAL,CACH,KAAKF,eAAL,CAAqBC,IAArB,CADG,EAEHE,KAFG,EAGHC,QAHG,EAIHM,KAJG,EAKHJ,KALG,EAMHK,MANG,CAAP;AASH,S;;uBAEDI,M,qBAAS;AACL,mBAAO,KAAKP,QAAL,CAAc,KAAKL,KAAL,CAAWa,UAAzB,EAAqC,CAArC,EAAwC,CAAxC,CAAP;AACH,S;;;;;yBAxDgBjB,I;;;AA4DrBA,SAAKkB,SAAL,GAAiB;AACbD,oBAAY,iBAAUE,KAAV,CAAgB;AACxBC,gBAAI,iBAAUC,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,EAA0DC,UADtC;AAExBnB,sBAAU,iBAAUoB,OAAV,CAAkB,iBAAUC,MAA5B;AAFc,SAAhB;AADC,KAAjB","file":"Mola.js","sourcesContent":["/**\n * @file mola\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {getComponent} from '../util/factory';\n\nexport default class Mola extends Component {\n\n    resolveTreeNode(type) {\n        return getComponent(type);\n    }\n\n    renderTreeNode(type, props, children, key, level = 0) {\n\n        return React.createElement(\n            type,\n            {\n                ...props,\n                key: `${level}-${key}`,\n                children\n            }\n        );\n\n    }\n\n    traverse(root, index, level, filter) {\n\n        let {\n            type,\n            children,\n            ...props\n        } = root;\n\n        if (filter && !filter(root, index, level)) {\n            return null;\n        }\n\n        children = children && children.length\n            ? children\n                .map(\n                    (child, index) => this.traverse(\n                        child,\n                        index,\n                        level + 1,\n                        filter\n                    )\n                )\n            : null;\n\n        return this.renderTreeNode(\n            this.resolveTreeNode(type),\n            props,\n            children,\n            index,\n            level,\n            filter\n        );\n\n    }\n\n    render() {\n        return this.traverse(this.props.components, 0, 0);\n    }\n\n}\n\nMola.propTypes = {\n    components: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        children: PropTypes.arrayOf(PropTypes.object)\n    })\n};\n"]}